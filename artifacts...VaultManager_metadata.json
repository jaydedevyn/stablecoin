{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BORROWING_FEE_DIVISOR",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "BORROWING_FEE_FLOOR",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DECIMAL_PRECISION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "LUSD_GAS_COMPENSATION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MINIMUM_COLLATERAL_RATIO",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "activePool",
				"outputs": [
					{
						"internalType": "contract ActivePool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "baseRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "borrowingContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_borrower",
						"type": "address"
					}
				],
				"name": "closeVault",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_ethAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_debt",
						"type": "uint256"
					}
				],
				"name": "createVault",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gasPool",
				"outputs": [
					{
						"internalType": "contract GasPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lusdAmount",
						"type": "uint256"
					}
				],
				"name": "getBorrowingFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_borrower",
						"type": "address"
					}
				],
				"name": "getNominalICR",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_borrower",
						"type": "address"
					}
				],
				"name": "getVaultCollateral",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_borrower",
						"type": "address"
					}
				],
				"name": "getVaultDebt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_borrower",
						"type": "address"
					}
				],
				"name": "liquidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lusdToken",
				"outputs": [
					{
						"internalType": "contract LUSDToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "priceFeed",
				"outputs": [
					{
						"internalType": "contract PriceFeed",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_priceFeedAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_stabilityPoolAddress",
						"type": "address"
					},
					{
						"internalType": "contract ActivePool",
						"name": "_activePool",
						"type": "address"
					},
					{
						"internalType": "contract LUSDToken",
						"name": "_lusdToken",
						"type": "address"
					},
					{
						"internalType": "contract GasPool",
						"name": "_gasPool",
						"type": "address"
					}
				],
				"name": "setAddresses",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sortedVaults",
				"outputs": [
					{
						"internalType": "contract SortedVaults",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stabilityPool",
				"outputs": [
					{
						"internalType": "contract StabilityPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "vaults",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "debt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "collateral",
						"type": "uint256"
					},
					{
						"internalType": "enum VaultManager.Status",
						"name": "status",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"VaultManager.sol": "VaultManager"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"ActivePool.sol": {
			"keccak256": "0x978fe8c2271bca5a12c7bfb1d58c22fdf5fc3d333cd16fbed4ba71fd843b8c47",
			"license": "MIT",
			"urls": [
				"bzz-raw://24299a4f04fd89a75075454168f30417ddfbafb6fae785defc975883cea9ed47",
				"dweb:/ipfs/QmbrLZ9YrgVhRDAokdP1Jr8PdP5Z8PEdytw9tepBuraBmV"
			]
		},
		"Base.sol": {
			"keccak256": "0xa42fd609750f182365a9d93377fe03ddfdbef9f9d772becd591d4c87bc7ca5e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://1f8ab4c2f0eab094f40e887288938c64df717d8e3d8d65a3d2ee1df17e7fff84",
				"dweb:/ipfs/QmQvfPcAtQxzKhnBgTRnBBenuh32ZqUidWSbQJLTeSWGna"
			]
		},
		"Borrowing.sol": {
			"keccak256": "0x805cae80ee7bfe2bfadfa6db2de5c5762050535081179f43fc66c448d5f9948e",
			"license": "MIT",
			"urls": [
				"bzz-raw://fec2808ea3ef7117366f27b73357aefc5562cfd76759bbb8dd3cc0d31e727dd4",
				"dweb:/ipfs/QmcRcAj6Z52J3zWytbTDVLRbfJ7Vhm6e4nZyUDT5gXpeqv"
			]
		},
		"GasPool.sol": {
			"keccak256": "0x507ea683bda28624261ccfeb11f1dffd823a80c185b6992d0e5ca261d59cde8f",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb62b1623beec4f56ae1b7907a9b3053e90dbb87633f91905bdf7a9492acc393",
				"dweb:/ipfs/QmaE5UxA1tBW33sumAtzn39pYSBppR1X32rMWviVmm4x8g"
			]
		},
		"LUSDToken.sol": {
			"keccak256": "0x80dbfc652d5201495eed9061517d3326ba498e139ef24c79d9eb92f6ce53bcbf",
			"license": "MIT",
			"urls": [
				"bzz-raw://97e0c702e27dc0c47471d3df71507fd5203eee17ecbc12d151273408230c4d3f",
				"dweb:/ipfs/QmVSXxvYuh7f5YCGxeG3YWDu4e6PKkCDwziBmtfDVJ8ZPU"
			]
		},
		"LiquityMath.sol": {
			"keccak256": "0x45c8a8699f8d133096d42a0b0984af4387d7efaea1509a00572b914befd46c50",
			"license": "MIT",
			"urls": [
				"bzz-raw://65fa6c51bbb4bba00daeef5d454c3f923a3d8609f359e952676d586c6af6890a",
				"dweb:/ipfs/QmWJHmdfcSFTFfUFY4KcfbDaMABPsb5Ui4cyUsHSKnhjAe"
			]
		},
		"PriceFeed.sol": {
			"keccak256": "0x86bfc7568c9acfc8425fd3733fbeb84f91f29d7f4c4084df792bcef3befc7dce",
			"license": "MIT",
			"urls": [
				"bzz-raw://5888e4d4ccf79791c6d3e9464733b32b4b7ad92ab360fd0468447dfce131ecbe",
				"dweb:/ipfs/QmXbevC3rbVCPjFwoDQQsBK85xCich7VcYtAwmQRyf5Czi"
			]
		},
		"SortedVaults.sol": {
			"keccak256": "0x170bb74c9d2448fc295500378bc1d9e49bdfead5a56dd79cbe2c76250e157f14",
			"license": "MIT",
			"urls": [
				"bzz-raw://91c53284574a8b902ae7a174f5541fd0911954fc17cb4a28c750ace296661ac4",
				"dweb:/ipfs/QmRQqa6kXDz3VmcmbxsancZdWYqNGLpiwYkyHnYkbNTaH2"
			]
		},
		"StabilityPool.sol": {
			"keccak256": "0x664477ef93ca76bf94afad202a7e0fd2044061c5bebe68c71f779abe479d66a6",
			"license": "MIT",
			"urls": [
				"bzz-raw://6235d75359fc1ea69bb02871d56fcfec83f6bc3600b6a76367d1478cb83a1d54",
				"dweb:/ipfs/QmR7ZTc98EJY9cLqvBMiWigstgc9apAYtxhZfRgtcPCNSA"
			]
		},
		"StakingPool.sol": {
			"keccak256": "0x01da8fe97977b5cca6e208b8df34ed237502c1b69f07da55aacaa425303fdd5e",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd6bbf780e82a61d8cc7adf70014ee114844ad514e3e83356abffae944a21228",
				"dweb:/ipfs/QmbgTjXKotNKKEraUbjsbVRLb6c9X3SC8ZvUWVrtkw8jk6"
			]
		},
		"VaultManager.sol": {
			"keccak256": "0xf09719340fc79c4d9cb58b3692a83d0f017ac4b9b015af4ac22631ad865df97e",
			"license": "MIT",
			"urls": [
				"bzz-raw://dd5d3ccdefe9530099e90c3595f7ac5fab76e6c2a88828dd6476cce0f5fea08e",
				"dweb:/ipfs/QmYagdJxxw3cqQx3BBzEmGZzR5QanSXdn9nDYQWwLCAcax"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4",
			"license": "MIT",
			"urls": [
				"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763",
				"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x7dafc8791d8e1a8fb3b12f56cb8e4927d1b8557b68e83844fd341a701ad05a5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://b8548137087a120c75076eede93bb62adae686d59bd0468281a85aeb1612791d",
				"dweb:/ipfs/QmXnRh5LWfEEt3fgnqdZLWjLfd16T4EdHbv6gqccL6kzYe"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x6e06af03b2d7fd72ffe791b77223bc0b32b19162cce3e4af181cb3fdc901aa57",
			"license": "MIT",
			"urls": [
				"bzz-raw://70a4a2929e204f0cd463e2f9d0188ea60a3b250cdd8dc04ee90703c45617a50e",
				"dweb:/ipfs/QmQJLd7m5CWrLnfeE99V5dYzNh6SkwKGGXjAonPCox41VE"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		}
	},
	"version": 1
}